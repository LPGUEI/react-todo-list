{"version":3,"sources":["styles/TodoItem.style.js","components/TodoItem.js","styles/TodoContainer.style.js","TodoContainer.js","helper.js","App.js","index.js"],"names":["Todo","styled","div","TodoContent","props","$isDone","DeleteButton","button","CheckButton","ButtonWrapper","TodoItem","todo","todoItems","handleDeleteTodo","handleTodoIsDone","data-todo-id","id","isDone","content","onClick","memo","TodoWrapper","Title","h1","CreateTodo","TodoInput","input","AllButton","ActiveButton","CompletedButton","TodoList","ClearTodo","TodoContainer","todoStatus","useState","todoList","setTodoList","todoContent","setTodoContent","showTodoStatus","setShowTodoStatus","useEffect","JSON","parse","localStorage","getItem","reviseTodoLocalStorage","setItem","stringify","addTodoContent","e","key","trim","Date","getTime","addTodoLocalStorage","filterTodoStatus","status","placeholder","value","onChange","target","onKeyDown","filter","map","leftTodos","todosCompleteStatus","todosClearAll","clearCompletedTodo","App","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d702e0e3.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Todo = styled.div`\n  border: 1px solid #ccc;\n  & + & {\n    margin-top: 10px;\n  }\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  border-radius: 5px;\n  box-shadow: 1px 1px 3px #ccc;\n`;\n\nexport const TodoContent = styled.div`\n  ${(props) =>\n    props.$isDone &&\n    `\n    text-decoration: line-through;\n  `}\n`;\n\nexport const DeleteButton = styled.button`\n  font-family: \"ubuntu\";\n  margin-right: 10px;\n  width: 80px;\n  background: #c8553d;\n  color: white;\n  border-radius: 3px;\n  border: none;\n  box-shadow: 1px 1px 3px #666;\n  padding: 5px;\n`;\n\nexport const CheckButton = styled.button`\n  font-family: \"ubuntu\";\n  width: 80px;\n  background: #73a6ad;\n  color: white;\n  border-radius: 3px;\n  border: none;\n  box-shadow: 1px 1px 3px #666;\n  padding: 5px;\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n","import { memo } from \"react\";\nimport {\n  Todo,\n  TodoContent,\n  DeleteButton,\n  CheckButton,\n  ButtonWrapper,\n} from \"../styles/TodoItem.style\";\n\nconst TodoItem = ({ todo, todoItems, handleDeleteTodo, handleTodoIsDone }) => {\n  const handleDeleteClick = () => {\n    handleDeleteTodo(todo.id, todoItems);\n  };\n\n  const handleIsDoneClick = () => {\n    handleTodoIsDone(todo.id, todoItems);\n  };\n\n  return (\n    <Todo data-todo-id={todo.id}>\n      <TodoContent $isDone={todo.isDone}>{todo.content}</TodoContent>\n      <ButtonWrapper>\n        <DeleteButton onClick={handleDeleteClick}>Delete</DeleteButton>\n        <CheckButton onClick={handleIsDoneClick}>\n          {todo.isDone ? \"Undone\" : \"Done\"}\n        </CheckButton>\n      </ButtonWrapper>\n    </Todo>\n  );\n};\n\nexport default memo(TodoItem);\n","import styled from \"styled-components\";\n\nexport const TodoWrapper = styled.div`\n  font-family: \"ubuntu\";\n  margin: 30px auto;\n  width: 480px;\n  border: 3px solid #f5f5f5;\n  border-radius: 5px;\n  padding: 30px;\n  text-align: center;\n  box-shadow: 3px 3px 5px #ccc;\n`;\n\nexport const Title = styled.h1`\n  color: #28262c;\n  font-size: 48px;\n`;\n\nexport const CreateTodo = styled.div`\n  margin: 20px auto;\n`;\n\nexport const TodoInput = styled.input`\n  margin-right: 10px;\n  width: 300px;\n  height: 24px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-shadow: 1px 1px 3px #ccc;\n  padding: 6px;\n  font-size: 16px;\n`;\n\nexport const AllButton = styled.button`\n  font-family: \"ubuntu\";\n  width: 80px;\n  background: #39393a;\n  color: white;\n  border-radius: 3px;\n  box-shadow: 1px 1px 3px #666;\n  border: none;\n  padding: 5px;\n`;\n\nexport const ActiveButton = styled.button`\n  font-family: \"ubuntu\";\n  width: 80px;\n  background: #ffe74c;\n  color: #333;\n  border-radius: 3px;\n  box-shadow: 1px 1px 3px #666;\n  border: none;\n  padding: 5px;\n  margin: 0 10px;\n`;\n\nexport const CompletedButton = styled.button`\n  font-family: \"ubuntu\";\n  width: 80px;\n  background: #666;\n  color: white;\n  border-radius: 3px;\n  box-shadow: 1px 1px 3px #666;\n  border: none;\n  padding: 5px;\n`;\n\nexport const TodoList = styled.div`\n  margin-top: 10px;\n`;\n\nexport const ClearTodo = styled.button`\n  font-family: \"ubuntu\";\n  width: 120px;\n  background: #c8553d;\n  color: white;\n  border-radius: 3px;\n  box-shadow: 1px 1px 3px #666;\n  border: none;\n  padding: 5px;\n  margin: 10px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport TodoItem from \"./components/TodoItem\";\nimport { getId } from \"./helper\";\n\nimport {\n  TodoWrapper,\n  Title,\n  CreateTodo,\n  TodoInput,\n  AllButton,\n  ActiveButton,\n  CompletedButton,\n  TodoList,\n  ClearTodo,\n} from \"./styles/TodoContainer.style\";\n\nexport default function TodoContainer() {\n  const todoStatus = {\n    All: \"all\",\n    Done: \"done\",\n    Undone: \"undone\",\n  };\n\n  const [todoList, setTodoList] = useState([]);\n  const [todoContent, setTodoContent] = useState(\"\");\n  const [showTodoStatus, setShowTodoStatus] = useState(todoStatus.All);\n\n  useEffect(() => {\n    const todoList = JSON.parse(localStorage.getItem(\"todoList\"));\n    if (todoList) {\n      setTodoList(todoList);\n    }\n  }, []);\n\n  const addTodoLocalStorage = (todoItems, todo) => {\n    localStorage.setItem(\"todoList\", JSON.stringify([...todoItems, todo]));\n    setTodoList([...todoItems, todo]);\n  };\n\n  const reviseTodoLocalStorage = (todo) => {\n    localStorage.setItem(\"todoList\", JSON.stringify(todo));\n    setTodoList(todo);\n  };\n\n  const addTodoContent = (e, content) => {\n    if (e.key === \"Enter\") {\n      if (!content || content.trim() === \"\") return;\n      const todo = { id: getId(), content: content, isDone: false };\n      addTodoLocalStorage(todoList, todo);\n      setTodoContent(\"\");\n    }\n  };\n\n  const handleInputChange = (e) => {\n    setTodoContent(e.target.value);\n  };\n\n  const handleDeleteTodo = (id, todoItems) => {\n    const leftTodos = todoItems.filter((todo) => todo.id !== id);\n    reviseTodoLocalStorage(leftTodos);\n  };\n\n  const handleTodoIsDone = (id, todoItems) => {\n    const todosCompleteStatus = todoItems.map((todo) => {\n      if (todo.id !== id) return todo;\n      return {\n        ...todo,\n        isDone: !todo.isDone,\n      };\n    });\n    reviseTodoLocalStorage(todosCompleteStatus);\n  };\n\n  const clearCompletedTodo = (todoItems) => {\n    const todosClearAll = todoItems.filter((todo) => todo.isDone !== true);\n    reviseTodoLocalStorage(todosClearAll);\n  };\n\n  const filterTodoStatus = (status) => () => setShowTodoStatus(status);\n\n  return (\n    <TodoWrapper>\n      <Title>Todo List</Title>\n      <CreateTodo>\n        <TodoInput\n          placeholder=\"press enter to add a task\"\n          value={todoContent}\n          onChange={handleInputChange}\n          onKeyDown={(e) => addTodoContent(e, todoContent)}\n        ></TodoInput>\n      </CreateTodo>\n      <AllButton onClick={filterTodoStatus(todoStatus.All)}>All</AllButton>\n      <ActiveButton onClick={filterTodoStatus(todoStatus.Undone)}>\n        Active\n      </ActiveButton>\n      <CompletedButton onClick={filterTodoStatus(todoStatus.Done)}>\n        Completed\n      </CompletedButton>\n      <TodoList>\n        {todoList\n          .filter((todo) => {\n            if (showTodoStatus === todoStatus.All) return todo;\n            return showTodoStatus === todoStatus.Done\n              ? todo.isDone\n              : !todo.isDone;\n          })\n          .map((todo) => (\n            <TodoItem\n              key={todo.id}\n              handleDeleteTodo={() => handleDeleteTodo(todo.id, todoList)}\n              handleTodoIsDone={() => handleTodoIsDone(todo.id, todoList)}\n              todo={todo}\n            />\n          ))}\n      </TodoList>\n      <ClearTodo onClick={() => clearCompletedTodo(todoList)}>\n        Clear Completed\n      </ClearTodo>\n    </TodoWrapper>\n  );\n}\n","export const getId = () => {\n  return new Date().getTime();\n};\n","import TodoContainer from \"./TodoContainer\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <TodoContainer />\n    </div>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}