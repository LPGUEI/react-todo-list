{"version":3,"sources":["components/TodoItem.js","components/TodoContainer.js","App.js","index.js"],"names":["Todo","styled","div","TodoContent","props","$isDone","DeleteButton","button","CheckButton","ButtonWrapper","TodoItem","todo","handleDeleteTodo","handleTodoIsDone","data-todo-id","id","isDone","content","onClick","memo","TodoWrapper","Title","h1","CreateTodo","TodoInput","input","AddButton","SelectTodo","AllButton","ActiveButton","CompletedButton","TodoList","ClearTodo","TodoContainer","useRef","useState","todos","setTodos","value","setValue","filter","setFilter","handleAddTodo","useCallback","alert","current","handleInputChange","e","target","map","handleTodoClear","filterAll","filterDone","filterUndone","onChange","App","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8fc6a3ea.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { memo } from \"react\";\n\nconst Todo = styled.div`\n  border: 1px solid #ccc;\n  & + & {\n    margin-top: 10px;\n  }\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  border-radius: 5px;\n  box-shadow: 1px 1px 3px #ccc;\n`;\n\nconst TodoContent = styled.div`\n  ${(props) =>\n    props.$isDone &&\n    `\n    text-decoration: line-through;\n  `}\n`;\n\nconst DeleteButton = styled.button`\n  font-family: \"ubuntu\";\n  margin-right: 10px;\n  width: 80px;\n  background: #c8553d;\n  color: white;\n  border-radius: 3px;\n  border: none;\n  box-shadow: 1px 1px 3px #666;\n  padding: 5px;\n`;\n\nconst CheckButton = styled.button`\n  font-family: \"ubuntu\";\n  width: 80px;\n  background: #73a6ad;\n  color: white;\n  border-radius: 3px;\n  border: none;\n  box-shadow: 1px 1px 3px #666;\n  padding: 5px;\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nfunction TodoItem({ todo, handleDeleteTodo, handleTodoIsDone }) {\n  const handleDeleteClick = () => {\n    handleDeleteTodo(todo.id);\n  };\n\n  const handleIsDoneClick = () => {\n    handleTodoIsDone(todo.id);\n  };\n\n  return (\n    <Todo data-todo-id={todo.id}>\n      <TodoContent $isDone={todo.isDone}>{todo.content}</TodoContent>\n      <ButtonWrapper>\n        <DeleteButton onClick={handleDeleteClick}>Delete</DeleteButton>\n        <CheckButton onClick={handleIsDoneClick}>\n          {todo.isDone ? \"Undone\" : \"Done\"}\n        </CheckButton>\n      </ButtonWrapper>\n    </Todo>\n  );\n}\n\nexport default memo(TodoItem);\n","import React, { useState, useRef, useCallback } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport styled from \"styled-components\";\n\nconst TodoWrapper = styled.div`\n  font-family: \"ubuntu\";\n  margin: 30px auto;\n  width: 480px;\n  border: 3px solid #f5f5f5;\n  border-radius: 5px;\n  padding: 30px;\n  text-align: center;\n  box-shadow: 3px 3px 5px #ccc;\n`;\n\nconst Title = styled.h1`\n  color: #28262c;\n  font-size: 48px;\n`;\n\nconst CreateTodo = styled.div`\n  margin: 20px auto;\n`;\n\nconst TodoInput = styled.input`\n  margin-right: 10px;\n  width: 300px;\n  height: 24px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-shadow: 1px 1px 3px #ccc;\n`;\n\nconst AddButton = styled.button`\n  font-family: \"ubuntu\";\n  width: 80px;\n  background: black;\n  color: white;\n  border-radius: 3px;\n  box-shadow: 1px 1px 3px #666;\n  border: none;\n  padding: 5px;\n`;\n\nconst SelectTodo = styled.div``;\n\nconst AllButton = styled.button`\n  font-family: \"ubuntu\";\n  width: 80px;\n  background: #39393a;\n  color: white;\n  border-radius: 3px;\n  box-shadow: 1px 1px 3px #666;\n  border: none;\n  padding: 5px;\n`;\n\nconst ActiveButton = styled.button`\n  font-family: \"ubuntu\";\n  width: 80px;\n  background: #ffe74c;\n  color: #333;\n  border-radius: 3px;\n  box-shadow: 1px 1px 3px #666;\n  border: none;\n  padding: 5px;\n  margin: 0 10px;\n`;\n\nconst CompletedButton = styled.button`\n  font-family: \"ubuntu\";\n  width: 80px;\n  background: #666;\n  color: white;\n  border-radius: 3px;\n  box-shadow: 1px 1px 3px #666;\n  border: none;\n  padding: 5px;\n`;\n\nconst TodoList = styled.div`\n  margin-top: 10px;\n`;\n\nconst ClearTodo = styled.button`\n  font-family: \"ubuntu\";\n  width: 120px;\n  background: #c8553d;\n  color: white;\n  border-radius: 3px;\n  box-shadow: 1px 1px 3px #666;\n  border: none;\n  padding: 5px;\n  margin: 10px;\n`;\n\nexport default function TodoContainer() {\n  const id = useRef(1);\n  const [todos, setTodos] = useState([]);\n  const [value, setValue] = useState(\"\");\n  const [filter, setFilter] = useState(\"all\");\n\n  const handleAddTodo = useCallback(() => {\n    if (!value) return alert(\"wanna type something?\");\n    setTodos((todo) => [{ id: id.current, content: value }, ...todos]);\n    setValue(\"\");\n    id.current++;\n  }, [todos, value]);\n\n  const handleInputChange = useCallback((e) => {\n    setValue(e.target.value);\n  }, []);\n\n  const handleDeleteTodo = useCallback(\n    (id) => {\n      setTodos(todos.filter((todo) => todo.id !== id));\n    },\n    [todos]\n  );\n\n  const handleTodoIsDone = useCallback(\n    (id) => {\n      setTodos(\n        todos.map((todo) => {\n          if (todo.id !== id) return todo;\n          return {\n            ...todo,\n            isDone: !todo.isDone,\n          };\n        })\n      );\n    },\n    [todos]\n  );\n\n  const handleTodoClear = useCallback(() => {\n    setTodos(todos.filter((todo) => todo.isDone !== true));\n  }, [todos]);\n\n  const filterAll = useCallback(() => {\n    setFilter(\"all\");\n  }, []);\n\n  const filterDone = useCallback(() => {\n    setFilter(\"done\");\n  }, []);\n\n  const filterUndone = useCallback(() => {\n    setFilter(\"undone\");\n  }, []);\n\n  return (\n    <TodoWrapper>\n      <Title>Todo List</Title>\n      <CreateTodo>\n        <TodoInput value={value} onChange={handleInputChange}></TodoInput>\n        <AddButton onClick={handleAddTodo}>Add Todo</AddButton>\n      </CreateTodo>\n      <SelectTodo>\n        <AllButton onClick={filterAll}>All</AllButton>\n        <ActiveButton onClick={filterUndone}>Active</ActiveButton>\n        <CompletedButton onClick={filterDone}>Completed</CompletedButton>\n      </SelectTodo>\n      <TodoList>\n        {todos\n          .filter((todo) => {\n            if (filter === \"all\") return todo;\n            return filter === \"done\" ? todo.isDone : !todo.isDone;\n          })\n          .map((todo) => (\n            <TodoItem\n              key={todo.id}\n              handleDeleteTodo={handleDeleteTodo}\n              handleTodoIsDone={handleTodoIsDone}\n              todo={todo}\n            />\n          ))}\n      </TodoList>\n      <ClearTodo onClick={handleTodoClear}>Clear Completed</ClearTodo>\n    </TodoWrapper>\n  );\n}\n","import TodoContainer from \"./components/TodoContainer\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <TodoContainer />\n    </div>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}